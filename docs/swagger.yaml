definitions:
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  model.Permission:
    properties:
      description:
        type: string
      id:
        type: integer
    type: object
  model.Role:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.RoleToPermission:
    properties:
      permission_id:
        type: integer
      role_id:
        type: integer
    type: object
  model.Roles:
    properties:
      id:
        type: integer
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/model.Permission'
        type: array
    type: object
  model.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
    type: object
info:
  contact: {}
  description: Authorization Service for Food Delivery Application
  title: Authorization Service
paths:
  /api/roles/:
    post:
      consumes:
      - application/json
      description: create role
      operationId: create-role
      parameters:
      - description: role info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - KeyAuth: []
      summary: Create Role
      tags:
      - Role
  /api/roles/:id:
    get:
      consumes:
      - application/json
      description: get role by id
      operationId: get-role-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Roles'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - KeyAuth: []
      summary: Get Role By Id
      tags:
      - Role
  /api/roles/permission:
    post:
      consumes:
      - application/json
      description: create permission
      operationId: create-permission
      parameters:
      - description: permission info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Permission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Permission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - KeyAuth: []
      summary: Create Permission
      tags:
      - Permission
  /api/roles/roleToPermission:
    post:
      consumes:
      - application/json
      description: create role to permission
      operationId: create-role-to-permission
      parameters:
      - description: RTP info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.RoleToPermission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleToPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - KeyAuth: []
      summary: Create Role to Permission
      tags:
      - Permission
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
securityDefinitions:
  KeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
